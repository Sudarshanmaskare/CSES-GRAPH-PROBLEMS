
You are given a tree consisting of n nodes.

Your task is to determine for each node the sum of the distances from the node to all other nodes.




vector<long long> adj[200005];
long long count1[200005];
long long res[200005];
 
 
void post(long long  node, long long pre) {
    long long  num_nodes = 1;
    long long dis = 0;
    for (auto var : adj[node]) {
        if (var != pre) {
            post(var, node);
            num_nodes += count1[var];
            dis += res[var] + count1[var];
        }
    }
    count1[node] = num_nodes;
    res[node] = dis;
}
 
void pre1(long long  node, long long  pre, long long n) {
    for (auto var : adj[node]) {
        if (var != pre) {
            res[var] = res[node] - count1[var] + n - count1[var];
            pre1(var, node, n);
        }
    }
}
void solve() {
    int n;
    cin >> n;
 
    for (int i = 0; i < n - 1; i++) {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
 
    post(1, -1);
    pre1(1, -1, n);
 
    for (int i = 1; i <= n; i++) {
        cout << res[i] << " ";
    }
 
 
}
int main() {
    //execution starts
    fast();//fast execution
    judge();//Judge
    solve();//Heart
    return 0;
}
